/*! \file */
/*******************************************
 *                                         *
 *  File auto-generated by `::safer_ffi`.  *
 *                                         *
 *  Do not manually edit this file.        *
 *                                         *
 *******************************************/

#ifndef __RUST_CDYLIB_DEMO__
#define __RUST_CDYLIB_DEMO__
#ifdef __cplusplus
extern "C" {
#endif


#include <stdbool.h>

/** <No documentation available> */
bool
ffi_test (void);


#include <stddef.h>
#include <stdint.h>

/** \brief
 *  Same as [`Vec<T>`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout
 */
typedef struct Vec_uint8 {
    /** <No documentation available> */
    uint8_t * ptr;

    /** <No documentation available> */
    size_t len;

    /** <No documentation available> */
    size_t cap;
} Vec_uint8_t;

/** <No documentation available> */
Vec_uint8_t
ffi_test_string (void);

/** <No documentation available> */
Vec_uint8_t
ffi_test_string2 (
    Vec_uint8_t input);


#ifdef __cplusplus
} /* extern \"C\" */
#endif

#endif /* __RUST_CDYLIB_DEMO__ */
